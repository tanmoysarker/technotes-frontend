{"ast":null,"code":"var _jsxFileName = \"/Users/tanmoy/Desktop/Pending Projects/Collaboration Tool/react-notes/src/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// const appStyle = {\n//     height: '250px',\n//     display: 'flex'\n// };\n// const formStyle = {\n//     margin: 'auto',\n//     padding: '10px',\n//     border: '1px solid #c9c9c9',\n//     borderRadius: '5px',\n//     background: '#f5f5f5',\n//     width: '220px',\n//     display: 'block'\n// };\n// const labelStyle = {\n//     margin: '10px 0 5px 0',\n//     fontFamily: 'Arial, Helvetica, sans-serif',\n//     fontSize: '15px',\n// };\n// const inputStyle = {\n//     margin: '5px 0 10px 0',\n//     padding: '5px', \n//     border: '1px solid #bfbfbf',\n//     borderRadius: '3px',\n//     boxSizing: 'border-box',\n//     width: '100%'\n// };\n// const submitStyle = {\n//     margin: '10px 0 0 0',\n//     padding: '7px 10px',\n//     border: '1px solid #efffff',\n//     borderRadius: '3px',\n//     background: '#3085d6',\n//     width: '100%', \n//     fontSize: '15px',\n//     color: 'white',\n//     display: 'block'\n// };\n// const Field = React.forwardRef(({label, type}, ref) => {\n//     return (\n//       <div>\n//         <label style={labelStyle} >{label}</label>\n//         <input ref={ref} type={type} style={inputStyle} />\n//       </div>\n//     );\n// });\n// const Form = ({onSubmit}) => {\n//     const usernameRef = React.useRef();\n//     const passwordRef = React.useRef();\n//     const handleSubmit = e => {\n//         e.preventDefault();\n//         const data = {\n//             username: usernameRef.current.value,\n//             password: passwordRef.current.value\n//         };\n//         onSubmit(data);\n//         window.location.pathname = \"/\";\n//     };\n//     return (\n//       <form style={formStyle} onSubmit={handleSubmit} >\n//         <Field ref={usernameRef} label=\"Username:\" type=\"text\" />\n//         <Field ref={passwordRef} label=\"Password:\" type=\"password\" />\n//         <div>\n//           <button style={submitStyle} type=\"submit\">Submit</button>\n//         </div>\n//       </form>\n//     );\n// };\n// // Usage example:\n// const LoginPage = () => {\n//     const handleSubmit = data => {\n//         const json = JSON.stringify(data, null, 4);\n//         console.clear();\n//         console.log(json);\n//     };\n//     return (\n//       <div style={appStyle}>\n//         <Form onSubmit={handleSubmit} />\n//       </div>\n//     );\n// };\n// export default LoginPage;\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState({\n    value: \"\"\n  });\n  const history = useHistory();\n  console.log(\"auth\", localStorage.getItem(\"isAuthenticated\"));\n\n  const handleInputChange = e => {\n    setUserData(prevState => {\n      return { ...prevState,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //if username or password field is empty, return error message\n\n    if (userData.username === \"\" || userData.password === \"\") {\n      setErrorMessage(prevState => ({\n        value: \"Empty username/password field\"\n      }));\n    } else if (userData.username == \"admin\" && userData.password == \"123456\") {\n      //Signin Success\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      window.location.pathname = \"/\";\n    } else {\n      //If credentials entered is invalid\n      setErrorMessage(prevState => ({\n        value: \"Invalid username/password\"\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signin User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        margin: 'auto',\n        padding: '10px',\n        border: '1px solid #c9c9c9',\n        borderRadius: '5px',\n        background: '#f5f5f5',\n        width: '220px',\n        display: 'block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            margin: '10px 0 5px 0',\n            fontFamily: 'Arial, Helvetica, sans-serif',\n            fontSize: '15px'\n          },\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"username\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            margin: '10px 0 5px 0',\n            fontFamily: 'Arial, Helvetica, sans-serif',\n            fontSize: '15px'\n          },\n          children: \">Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"password\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), errorMessage.value && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: [\" \", errorMessage.value, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"eR4Ojl9Z+zc5spTv/TX0JTuDGGQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/tanmoy/Desktop/Pending Projects/Collaboration Tool/react-notes/src/pages/LoginPage.js"],"names":["React","useState","useHistory","LoginPage","userData","setUserData","username","password","errorMessage","setErrorMessage","value","history","console","log","localStorage","getItem","handleInputChange","e","prevState","target","name","handleSubmit","preventDefault","setItem","window","location","pathname","margin","padding","border","borderRadius","background","width","display","fontFamily","fontSize"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// const appStyle = {\n//     height: '250px',\n//     display: 'flex'\n// };\n\n// const formStyle = {\n//     margin: 'auto',\n//     padding: '10px',\n//     border: '1px solid #c9c9c9',\n//     borderRadius: '5px',\n//     background: '#f5f5f5',\n//     width: '220px',\n//     display: 'block'\n// };\n\n// const labelStyle = {\n//     margin: '10px 0 5px 0',\n//     fontFamily: 'Arial, Helvetica, sans-serif',\n//     fontSize: '15px',\n// };\n\n// const inputStyle = {\n//     margin: '5px 0 10px 0',\n//     padding: '5px', \n//     border: '1px solid #bfbfbf',\n//     borderRadius: '3px',\n//     boxSizing: 'border-box',\n//     width: '100%'\n// };\n\n// const submitStyle = {\n//     margin: '10px 0 0 0',\n//     padding: '7px 10px',\n//     border: '1px solid #efffff',\n//     borderRadius: '3px',\n//     background: '#3085d6',\n//     width: '100%', \n//     fontSize: '15px',\n//     color: 'white',\n//     display: 'block'\n// };\n\n// const Field = React.forwardRef(({label, type}, ref) => {\n//     return (\n//       <div>\n//         <label style={labelStyle} >{label}</label>\n//         <input ref={ref} type={type} style={inputStyle} />\n//       </div>\n//     );\n// });\n\n// const Form = ({onSubmit}) => {\n//     const usernameRef = React.useRef();\n//     const passwordRef = React.useRef();\n//     const handleSubmit = e => {\n//         e.preventDefault();\n//         const data = {\n//             username: usernameRef.current.value,\n//             password: passwordRef.current.value\n//         };\n//         onSubmit(data);\n//         window.location.pathname = \"/\";\n//     };\n//     return (\n//       <form style={formStyle} onSubmit={handleSubmit} >\n//         <Field ref={usernameRef} label=\"Username:\" type=\"text\" />\n//         <Field ref={passwordRef} label=\"Password:\" type=\"password\" />\n//         <div>\n//           <button style={submitStyle} type=\"submit\">Submit</button>\n//         </div>\n//       </form>\n//     );\n// };\n\n// // Usage example:\n\n// const LoginPage = () => {\n//     const handleSubmit = data => {\n//         const json = JSON.stringify(data, null, 4);\n//         console.clear();\n//         console.log(json);\n//     };\n//     return (\n//       <div style={appStyle}>\n//         <Form onSubmit={handleSubmit} />\n//       </div>\n//     );\n// };\n\n// export default LoginPage;\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction LoginPage() {\n  const [userData, setUserData] = useState({ username: \"\", password: \"\" });\n  const [errorMessage, setErrorMessage] = useState({ value: \"\" });\n  const history = useHistory();\n  console.log(\"auth\", localStorage.getItem(\"isAuthenticated\"));\n\n  const handleInputChange = (e) => {\n    setUserData((prevState) => {\n      return {\n        ...prevState,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //if username or password field is empty, return error message\n    if (userData.username === \"\" || userData.password === \"\") {\n      setErrorMessage((prevState) => ({\n        value: \"Empty username/password field\",\n      }));\n    } else if (userData.username == \"admin\" && userData.password == \"123456\") {\n      //Signin Success\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      window.location.pathname = \"/\";\n    } else {\n      //If credentials entered is invalid\n      setErrorMessage((prevState) => ({ value: \"Invalid username/password\" }));\n    }\n  };\n\n  return (\n    <div className=\"text-center\">\n      <h1>Signin User</h1>\n      <form\n        style={{\n            margin: 'auto',\n            padding: '10px',\n            border: '1px solid #c9c9c9',\n            borderRadius: '5px',\n            background: '#f5f5f5',\n            width: '220px',\n            display: 'block'\n        }}\n      >\n        <div className=\"form-group\">\n          <label style={{\n              margin: '10px 0 5px 0',\n              fontFamily: 'Arial, Helvetica, sans-serif',\n              fontSize: '15px'\n            }}\n          >\n         Username\n         </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"username\"\n            onChange={(e) => handleInputChange(e)}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label style={{\n              margin: '10px 0 5px 0',\n              fontFamily: 'Arial, Helvetica, sans-serif',\n              fontSize: '15px'\n            }}\n          >>Password</label>\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            name=\"password\"\n            onChange={(e) => handleInputChange(e)}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={handleSubmit}\n        >\n          Submit\n        </button>\n\n        {errorMessage.value && (\n          <p className=\"text-danger\"> {errorMessage.value} </p>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}